{"version":3,"sources":["components/Question/Question.module.css","components/Footer/Footer.module.css","components/Body/Body.module.css","components/Header/Header.module.css","utils/encoder.js","components/Result/Result.module.css","api/api.js","redux/app-reducer/app-reducer.js","redux/redux-store.js","redux/app-reducer/app-selectors.js","components/Start/index.js","components/Start/Start.jsx","components/Result/index.js","components/Result/Result.jsx","assets/img/arrow.svg","assets/img/return.svg","components/common/Button/Button.jsx","components/common/Button/index.js","components/common/Preloader/index.js","components/common/Preloader/Preloader.jsx","components/Question/Question.jsx","components/Question/index.js","components/Body/index.js","components/Body/Body.jsx","components/Header/index.js","components/Header/Header.jsx","components/Footer/index.js","components/Footer/Footer.jsx","App.js","index.js","components/Start/Start.module.css","components/common/Preloader/Preloader.module.css","components/common/Button/Button.module.css"],"names":["module","exports","encodeString","text","Buffer","toString","server","axios","API","getQuestions","size","get","then","response","data","SET_CURRENT_QUESTION","SET_QUESTIONS","TOGGLE_IS_FETCHING","SET_TARGET_PAGE","SET_ERROR","SET_CURRENT_ANSWER","FIX_ANSWER","CLEAR_RESULT","initialState","levels","easy","medium","hard","questionSize","score","main","currentQuestion","currentAnswer","questions","category","correctAnswer","level","incorrectAnswers","question","type","answers","currentPage","isFetching","errorData","setQuestions","toggleIsFetching","appReducer","state","action","answer","console","log","length","error","reducers","combineReducers","app","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","getAppIsFetching","getAppScore","getAppLevels","getAppCurrentQuestion","getAppQuestions","getAppQuestionSize","getAppCurrentPage","Start","connect","props","className","styles","start","instruct","txt","levelsEasy","levelsMiddle","levelsHard","Result","detailScore","getLevelSize","filter","el","easyQuestionSize","mediumQuestionSize","hardQuestionSize","maxScore","mainScore","container","result","details","detailResult","mapDispatchToProps","setCurrentPage","dispatch","a","response_code","results","map","correct_answer","difficulty","incorrect_answers","setCurrentQuestion","fixAnswer","clearResult","Button","questionsSize","title","img","arrow","imgClassName","btnArrow","nextPage","again","btnReturn","onClick","data-page","src","btnSvg","Preloader","flag","wrap","preloader","glare","AnswerItem","index","setAnswer","checkbox","id","name","checked","e","selectedAnswer","target","defaultValue","value","htmlFor","setCurrentAnswer","Question","answerElements","i","questionTitle","variants","data-level","Body","body","showPage","button","Header","header","Footer","footer","line","style","width","point","AppContainer","Questionnaire","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.06fc4f22.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"question\":\"Question_question__2MCDt\",\"category\":\"Question_category__2oRqb\",\"questionTitle\":\"Question_questionTitle__3uIf-\",\"variants\":\"Question_variants__1Rkxb\",\"checkbox\":\"Question_checkbox__1Qknj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__1greF\",\"line\":\"Footer_line__1SxoO\",\"point\":\"Footer_point__3FzjZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"body\":\"Body_body__3nOCR\",\"button\":\"Body_button__3nwMZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__FPDc6\"};","export const encodeString = text => {\r\n    if (typeof text !== \"string\")\r\n        return \"\"\r\n\r\n    return new Buffer(text, 'base64')\r\n        .toString('utf8');\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Result_container__K7PVA\",\"result\":\"Result_result__2iaFI\",\"score\":\"Result_score__26Mg1\",\"details\":\"Result_details__1BL6E\",\"levels\":\"Result_levels__30YFC\",\"levelsEasy\":\"Result_levelsEasy__1RC3m\",\"levelsMiddle\":\"Result_levelsMiddle__20Sxn\",\"levelsHard\":\"Result_levelsHard__1wmkc\"};","import * as axios from \"axios\"\r\n\r\nconst server = axios.create()\r\n\r\nconst API = {\r\n    getQuestions(size = 10) {\r\n        // console.log(\"API: Continuing\")\r\n        return server.get(`https://opentdb.com/api.php?amount=${size}&encode=base64`)\r\n            .then(response => response.data)\r\n    }\r\n}\r\n\r\nexport default API\r\n","import API from \"../../api/api\";\r\nimport {encodeString} from \"../../utils/encoder\";\r\n\r\nconst SET_CURRENT_QUESTION = \"SET-CURRENT-QUESTION\"\r\nconst SET_QUESTIONS = \"SET-QUESTIONS\"\r\nconst TOGGLE_IS_FETCHING = \"TOGGLE-IS-FETCHING\"\r\nconst SET_TARGET_PAGE = \"SET-TARGET-PAGE\"\r\nconst SET_ERROR = \"SET-ERROR\"\r\nconst SET_CURRENT_ANSWER = \"SET-CURRENT-ANSWER\"\r\nconst FIX_ANSWER = \"FIX-ANSWER\"\r\nconst CLEAR_RESULT = \"CLEAR-RESULT\"\r\n\r\nconst initialState = {\r\n    levels: {easy: 1, medium: 2, hard: 3},\r\n    questionSize: 10,\r\n    score: {\r\n        easy: 0,\r\n        medium: 0,\r\n        hard: 0,\r\n        main: 0\r\n    },\r\n    currentQuestion: 0,\r\n    currentAnswer: null,\r\n    questions: [\r\n        {\r\n            category: null,\r\n            correctAnswer: null,\r\n            level: null,\r\n            incorrectAnswers: [],\r\n            question: null,\r\n            type: null,\r\n            answers: [],\r\n        }\r\n    ],\r\n    currentPage: \"start\",\r\n    isFetching: false,\r\n    errorData: null\r\n\r\n}\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FIX_ANSWER:\r\n            const currentQuestion = state.questions[state.currentQuestion]\r\n            const correctAnswer = encodeString(currentQuestion.correctAnswer)\r\n            const level = encodeString(currentQuestion.level)\r\n            let score = {...state.score}\r\n            let answer = state.currentAnswer\r\n\r\n            console.log(\"correct answer\", correctAnswer)\r\n\r\n            if (answer === null) {\r\n                answer = encodeString(currentQuestion.answers[currentQuestion.answers.length - 1])\r\n            }\r\n\r\n            if (correctAnswer === answer) {\r\n                score[level]++\r\n            }\r\n            // debugger\r\n\r\n            return {\r\n                ...state,\r\n                score,\r\n            }\r\n        case SET_CURRENT_QUESTION:\r\n            return {\r\n                ...state,\r\n                currentQuestion: action.currentQuestion\r\n            }\r\n        case SET_QUESTIONS:\r\n            return {\r\n                ...state,\r\n                questions: action.questions\r\n            }\r\n        case TOGGLE_IS_FETCHING:\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching\r\n            }\r\n        case SET_TARGET_PAGE:\r\n            return {\r\n                ...state,\r\n                currentPage: action.currentPage\r\n            }\r\n        case SET_CURRENT_ANSWER:\r\n            return {\r\n                ...state,\r\n                currentAnswer: action.answer\r\n            }\r\n        case SET_ERROR:\r\n            return {\r\n                ...state,\r\n                errorData: action.error\r\n            }\r\n        case CLEAR_RESULT:\r\n            return initialState\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const setCurrentQuestion = currentQuestion => ({type: SET_CURRENT_QUESTION, currentQuestion})\r\nexport const setQuestions = questions => ({type: SET_QUESTIONS, questions})\r\nexport const toggleIsFetching = isFetching => ({type: TOGGLE_IS_FETCHING, isFetching})\r\nexport const setCurrentPage = currentPage => ({type: SET_TARGET_PAGE, currentPage})\r\nexport const setError = error => ({type: SET_ERROR, error})\r\nexport const setCurrentAnswer = answer => ({type: SET_CURRENT_ANSWER, answer})\r\nexport const fixAnswer = () => ({type: FIX_ANSWER})\r\nexport const clearResult = () => ({type: CLEAR_RESULT})\r\n\r\nexport const getQuestions = size => async dispatch => {\r\n    dispatch(toggleIsFetching(true))\r\n\r\n    // console.log(\"API: Starting\")\r\n\r\n    const data = await API.getQuestions(size)\r\n\r\n    if (data.response_code !== 0) {\r\n        dispatch(setError(\"Ошибка получения данных. Повторите попытку.\"))\r\n        // console.log(\"API: Error\", data)\r\n        return\r\n    }\r\n\r\n    const questions = data.results.map(el => {\r\n        return {\r\n            category: el.category,\r\n            correctAnswer: el.correct_answer,\r\n            level: el.difficulty,\r\n            incorrectAnswers: el.incorrect_answers,\r\n            question: el.question,\r\n            type: el.type,\r\n            answers: [...el.incorrect_answers, el.correct_answer]\r\n        }\r\n    })\r\n\r\n\r\n    dispatch(setQuestions(questions))\r\n\r\n    dispatch(toggleIsFetching(false))\r\n\r\n    // console.log(\"API: questions\", questions)\r\n}\r\n\r\nexport default appReducer\r\n","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\"\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport appReducer from \"./app-reducer/app-reducer\";\r\n\r\nconst reducers = combineReducers({app: appReducer})\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)))\r\n\r\nexport default store\r\n","export const getAppIsFetching = state => state.app.isFetching\r\nexport const getAppScore = state => state.app.score\r\nexport const getAppLevels = state => state.app.levels\r\nexport const getAppCurrentQuestion = state => state.app.currentQuestion\r\nexport const getAppQuestions = state => state.app.questions\r\nexport const getAppQuestionSize = state => state.app.questionSize\r\nexport const getAppCurrentPage = state => state.app.currentPage\r\n","import Start from \"./Start\"\r\n\r\nexport default Start\r\n","import React from \"react\"\r\nimport styles from \"./Start.module.css\"\r\nimport {connect} from \"react-redux\";\r\nimport {getAppLevels, getAppQuestionSize} from \"../../redux/app-reducer/app-selectors\";\r\n\r\nconst Start = props => {\r\n    const {questionSize, levels} = props\r\n\r\n    return <div className={styles.start}>\r\n        <div className={styles.instruct}>\r\n            <div className={styles.txt}>\r\n                <p>Опрос состоит из <span>{questionSize}</span> вопросов с тремя уровнями сложности.</p>\r\n                <p>Вопросы могут относиться к <span>разным</span> категориям.</p>\r\n                <p>В нижней части экрана можно увидеть строку <span>прогресса</span>.</p>\r\n                <p>В конце будет выведен <span>результат</span>.</p>\r\n                <p>Для <span>начала</span> опроса нажмите на кнопку ниже.</p>\r\n            </div>\r\n            <fieldset className={styles.levels}>\r\n                <legend>Уровни сложности</legend>\r\n                <p className={styles.levelsEasy}>Легкий - {levels.easy} балла</p>\r\n                <p className={styles.levelsMiddle}>Средний - {levels.medium} балл</p>\r\n                <p className={styles.levelsHard}>Сложный - {levels.hard} балла</p>\r\n            </fieldset>\r\n        </div>\r\n    </div>;\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    questionSize: getAppQuestionSize(state),\r\n    levels: getAppLevels(state)\r\n})\r\n\r\nconst StartContainer = connect(mapStateToProps)(Start)\r\n\r\nexport default StartContainer\r\n","import Result from \"./Result\"\r\n\r\nexport default Result\r\n","import React from \"react\"\r\nimport styles from \"./Result.module.css\"\r\nimport {encodeString} from \"../../utils/encoder\";\r\nimport {getAppLevels, getAppQuestions, getAppQuestionSize, getAppScore} from \"../../redux/app-reducer/app-selectors\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst Result = props => {\r\n    const {score, questions, questionSize, levels} = props\r\n\r\n    const detailScore = score.easy + score.medium + score.hard\r\n\r\n    const getLevelSize = level => questions.filter(el => encodeString(el.level) === level).length\r\n    const easyQuestionSize = getLevelSize(\"easy\")\r\n    const mediumQuestionSize = getLevelSize(\"medium\")\r\n    const hardQuestionSize = getLevelSize(\"hard\")\r\n\r\n    const maxScore = (easyQuestionSize * levels.easy) + (mediumQuestionSize * levels.medium) + (hardQuestionSize * levels.hard)\r\n\r\n    const mainScore = ((score.easy * levels.easy) + (score.medium * levels.medium) + (score.hard * levels.hard)) * 100 / maxScore\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n            <div className={styles.result}>\r\n                <p>Результат:</p>\r\n                <p><span className={styles.score}>{mainScore} %</span></p>\r\n            </div>\r\n            <div className={styles.details}>\r\n                <div className={styles.levels}>\r\n                    <p className={styles.levelsEasy}>Легкий - {score.easy} / {easyQuestionSize}</p>\r\n                    <p className={styles.levelsMiddle}>Средний - {score.medium} / {mediumQuestionSize}</p>\r\n                    <p className={styles.levelsHard}>Тяжелый - {score.hard} / {hardQuestionSize}</p>\r\n                </div>\r\n                <div className={styles.detailResult}>\r\n                    <p>Всего правильных ответов: <span>{detailScore}</span> / {questionSize}</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    score: getAppScore(state),\r\n    questions: getAppQuestions(state),\r\n    questionSize: getAppQuestionSize(state),\r\n    levels: getAppLevels(state)\r\n})\r\n\r\nconst ResultContainer = connect(mapStateToProps)(Result)\r\n\r\nexport default ResultContainer\r\n","export default __webpack_public_path__ + \"static/media/arrow.50e0e591.svg\";","export default __webpack_public_path__ + \"static/media/return.9136288d.svg\";","import React from \"react\"\r\nimport arrow from \"../../../assets/img/arrow.svg\"\r\nimport again from \"../../../assets/img/return.svg\"\r\nimport styles from \"./Button.module.css\"\r\nimport {connect} from \"react-redux\";\r\nimport {getAppCurrentPage, getAppCurrentQuestion, getAppQuestionSize} from \"../../../redux/app-reducer/app-selectors\";\r\nimport {\r\n    clearResult,\r\n    fixAnswer,\r\n    getQuestions,\r\n    setCurrentPage,\r\n    setCurrentQuestion\r\n} from \"../../../redux/app-reducer/app-reducer\";\r\n\r\nconst Button = props => {\r\n    const {\r\n        currentPage,\r\n        setCurrentPage,\r\n        getQuestions,\r\n        questionsSize,\r\n        currentQuestion,\r\n        setCurrentQuestion,\r\n        fixAnswer,\r\n        clearResult\r\n    } = props\r\n\r\n    let title = \"Начать новый опрос\"\r\n    let img = arrow\r\n    let imgClassName = styles.btnArrow\r\n    let nextPage = props.nextPage ? props.nextPage : \"finish\"\r\n\r\n    if (currentPage === \"start\") {\r\n        title = \"Начать опрос\"\r\n        nextPage = \"process\"\r\n    } else if (currentPage === \"process\") {\r\n        if (nextPage === \"start\") {\r\n            title = \"Начать новый опрос\"\r\n            img = again\r\n            imgClassName = styles.btnReturn\r\n        } else {\r\n            title = \"Следующий вопрос\"\r\n        }\r\n    } else if (currentPage === \"finish\") {\r\n        img = again\r\n        imgClassName = styles.btnReturn\r\n        nextPage = \"start\"\r\n    }\r\n\r\n    const changePage = () => {\r\n        if (nextPage === \"process\" && currentPage === \"start\") {\r\n            getQuestions(questionsSize)\r\n        } else if (currentPage === \"process\" && nextPage !== \"start\" && currentQuestion < 9) {\r\n            fixAnswer()\r\n            setCurrentQuestion(currentQuestion + 1)\r\n            return\r\n        } else if (nextPage === \"start\") {\r\n            clearResult()\r\n        }\r\n\r\n        setCurrentQuestion(0)\r\n\r\n        return setCurrentPage(nextPage);\r\n    }\r\n\r\n    return <button onClick={changePage} data-page={currentPage}>\r\n        <span className={styles.title}>{title}</span>\r\n        <img src={img} className={`${styles.btnSvg} ${imgClassName}`}></img>\r\n    </button>\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    currentPage: getAppCurrentPage(state),\r\n    questionsSize: getAppQuestionSize(state),\r\n    currentQuestion: getAppCurrentQuestion(state),\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    setCurrentPage, getQuestions,\r\n    setCurrentQuestion, fixAnswer, clearResult\r\n}\r\n\r\nconst ButtonContainer = connect(mapStateToProps, mapDispatchToProps)(Button)\r\n\r\nexport default ButtonContainer\r\n","import Button from \"./Button\"\r\n\r\nexport default Button\r\n","import Preloader from \"./Preloader\"\r\n\r\nexport default Preloader\r\n","import React from \"react\"\r\nimport styles from \"./Preloader.module.css\"\r\n\r\nconst Preloader = ({flag = true}) => {\r\n\r\n    if (flag === false) return \"\"\r\n\r\n    return <div className={styles.wrap}>\r\n        <div className={styles.container}>\r\n            <div className={styles.txt}>Loading...</div>\r\n            <div className={styles.preloader}>\r\n                <div className={styles.glare}></div>\r\n                <div className={styles.glare}></div>\r\n            </div>\r\n        </div>\r\n    </div>;\r\n}\r\n\r\nexport default Preloader\r\n","import React from \"react\"\r\nimport styles from \"./Question.module.css\"\r\nimport Preloader from \"../common/Preloader\";\r\nimport {encodeString} from \"../../utils/encoder\";\r\nimport {getAppCurrentQuestion, getAppIsFetching, getAppQuestions} from \"../../redux/app-reducer/app-selectors\";\r\nimport {connect} from \"react-redux\";\r\nimport {setCurrentAnswer} from \"../../redux/app-reducer/app-reducer\";\r\n\r\nconst AnswerItem = props => {\r\n    let answer = props.answer\r\n\r\n    const {index, type, setAnswer} = props\r\n\r\n    if (type !== \"multiple\") {\r\n        if (props.answer === \"True\") {\r\n            answer = \"Yes\"\r\n        } else if (props.answer === \"False\") {\r\n            answer = \"No\"\r\n        }\r\n    }\r\n\r\n    const selectAnswer = e => {\r\n        const selectedAnswer = e.target.defaultValue\r\n\r\n        console.log(\"Selected answer:\", selectedAnswer)\r\n\r\n        setAnswer(selectedAnswer)\r\n    }\r\n\r\n    return <li>\r\n        <input className={styles.checkbox} type=\"radio\" id={`answerCheckbox-${index}`}\r\n               name={\"radio-answer\"} checked onClick={selectAnswer} value={props.answer}/>\r\n        <label htmlFor={`answerCheckbox-${index}`}>{answer}</label>\r\n    </li>;\r\n}\r\n\r\nconst Question = props => {\r\n    const {isFetching, currentQuestion, questions, setCurrentAnswer} = props\r\n\r\n    const question = encodeString(questions[currentQuestion].question)\r\n    const category = encodeString(questions[currentQuestion].category)\r\n    const type = encodeString(questions[currentQuestion].type)\r\n    const answers = questions[currentQuestion].answers\r\n        .map(el => encodeString(el))\r\n    const level = encodeString(questions[currentQuestion].level)\r\n\r\n    const answerElements = answers\r\n        .map((el, i) => {\r\n            const data = {\r\n                answer: el, index: i,\r\n                setAnswer: setCurrentAnswer,\r\n                type,\r\n            }\r\n\r\n            return <AnswerItem {...data}/>;\r\n        })\r\n\r\n    return <div className={styles.question}>\r\n        <Preloader flag={isFetching}/>\r\n        <div className={styles.category}>Категория: {category}</div>\r\n        <div className={styles.questionTitle}>\r\n            {currentQuestion + 1}. {question}\r\n        </div>\r\n        <fieldset className={styles.variants} data-level={level}>\r\n            <legend>Варианты ответа</legend>\r\n            <ul>\r\n                {answerElements}\r\n            </ul>\r\n        </fieldset>\r\n    </div>;\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    isFetching: getAppIsFetching(state),\r\n    currentQuestion: getAppCurrentQuestion(state),\r\n    questions: getAppQuestions(state)\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    setCurrentAnswer\r\n}\r\n\r\nconst QuestionContainer = connect(mapStateToProps, mapDispatchToProps)(Question)\r\n\r\nexport default QuestionContainer\r\n","import Question from \"./Question\"\r\n\r\nexport default Question\r\n","import Body from \"./Body\"\r\n\r\nexport default Body\r\n","import React from \"react\"\r\nimport styles from \"./Body.module.css\"\r\nimport StartContainer from \"../Start\"\r\nimport ResultContainer from \"../Result\"\r\nimport ButtonContainer from \"../common/Button\"\r\nimport QuestionContainer from \"../Question\"\r\n\r\nconst Body = ({currentPage}) => {\r\n    const showPage = (currentPage = \"start\") => {\r\n        switch (currentPage) {\r\n            case \"start\":\r\n                return <StartContainer/>\r\n            case \"process\":\r\n                return <QuestionContainer/>\r\n            case \"finish\":\r\n                return <ResultContainer/>\r\n            default:\r\n                return <StartContainer/>\r\n        }\r\n    }\r\n\r\n    return <main className={styles.body}>\r\n        {showPage(currentPage)}\r\n        <div className={styles.button}>\r\n            {currentPage === \"process\" ? <ButtonContainer nextPage={\"start\"}/> : \"\"}\r\n            <ButtonContainer/>\r\n        </div>\r\n    </main>\r\n}\r\n\r\nexport default Body\r\n","import Header from \"./Header\"\r\n\r\nexport default Header\r\n","import React from \"react\"\r\nimport styles from \"./Header.module.css\"\r\n\r\nconst Header = () =>\r\n    <header className={styles.header}>\r\n        <div>Questionnaire</div>\r\n    </header>\r\n\r\nexport default Header\r\n","import Footer from \"./Footer\"\r\n\r\nexport default Footer\r\n","import React from \"react\"\r\nimport styles from \"./Footer.module.css\"\r\nimport {connect} from \"react-redux\"\r\nimport {getAppCurrentPage, getAppCurrentQuestion, getAppQuestionSize} from \"../../redux/app-reducer/app-selectors\"\r\n\r\nconst Footer = props => {\r\n    const {currentPage, currentQuestion, questionSize} = props\r\n\r\n    const size = currentPage === \"finish\" ? 100 : 100 * currentQuestion / questionSize\r\n\r\n    return <div className={styles.footer}>\r\n        <div className={styles.line}>\r\n            <div style={{width: `${size}%`}} className={styles.point}></div>\r\n        </div>\r\n    </div>\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    currentPage: getAppCurrentPage(state),\r\n    currentQuestion: getAppCurrentQuestion(state),\r\n    questionSize: getAppQuestionSize(state),\r\n})\r\n\r\nconst FooterContainer = connect(mapStateToProps)(Footer)\r\n\r\nexport default FooterContainer\r\n","import {connect, Provider} from \"react-redux\"\nimport store from \"./redux/redux-store\"\nimport Body from \"./components/Body\"\nimport Header from \"./components/Header\"\nimport './App.css'\nimport {getAppCurrentPage} from \"./redux/app-reducer/app-selectors\"\nimport FooterContainer from \"./components/Footer\"\n\nconst App = ({currentPage}) =>\n    <div className=\"App\">\n        <Header/>\n        <Body currentPage={currentPage}/>\n        {currentPage === \"start\" ? \"\" : <FooterContainer/>}\n    </div>\n\nconst mapStateToProps = state => ({\n    currentPage: getAppCurrentPage(state)\n})\n\nconst AppContainer = connect(mapStateToProps)(App)\n\nconst Questionnaire = () =>\n    <Provider store={store}>\n        <AppContainer/>\n    </Provider>\n\nexport default Questionnaire\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport AppContainer from './App';\n\nReactDOM.render(\n    <React.StrictMode>\n        <AppContainer/>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"start\":\"Start_start__3ik26\",\"instruct\":\"Start_instruct__NL9iQ\",\"txt\":\"Start_txt__1doU1\",\"levels\":\"Start_levels__3ryq9\",\"levelsEasy\":\"Start_levelsEasy__18Cp5\",\"levelsMiddle\":\"Start_levelsMiddle__3PIvL\",\"levelsHard\":\"Start_levelsHard__3_M8T\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"Preloader_wrap__2-QFE\",\"container\":\"Preloader_container__2lR86\",\"txt\":\"Preloader_txt__3f4Uv\",\"preloader\":\"Preloader_preloader__ewztt\",\"glare\":\"Preloader_glare__3hNri\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Button_title__38O-Y\",\"btnSvg\":\"Button_btnSvg__2KkYB\",\"btnArrow\":\"Button_btnArrow__2oKDm\",\"btnReturn\":\"Button_btnReturn__WPThl\",\"arrow-move\":\"Button_arrow-move__3QTKn\"};"],"sourceRoot":""}